var _=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var x=(n,t,s,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of $(t))!C.call(n,a)&&a!==s&&_(n,a,{get:()=>t[a],enumerable:!(r=U(t,a))||r.enumerable});return n},b=(n,t,s)=>(x(n,t,"default"),s&&x(s,t,"default"));var d={};b(d,W);import*as W from"https://registry.koishi.chat/modules/koishi/index.js";var j=Object.defineProperty,h=(n,t)=>j(n,"name",{value:t,configurable:!0}),P={internal:{"error-encountered":"发生未知错误：{0}"},admin:{"user-option":"指定目标用户","user-not-found":"未找到指定的用户。","user-unchanged":"用户数据未改动。","user-updated":"用户数据已修改。","channel-option":"指定目标频道","channel-not-found":"未找到指定的频道。","channel-unchanged":"频道数据未改动。","channel-updated":"频道数据已修改。","not-in-group":"当前不在群组上下文中，请使用 -c 参数指定目标频道。"}},k={internal:{"error-encountered":"An unknown error has occurred: {0}"},admin:{"user-not-found":"User not found.","user-unchanged":"User data unchanged.","user-updated":"User data updated.","channel-not-found":"Channel not found.","channel-unchanged":"Channel data unchanged.","channel-updated":"Channel data updated.","not-in-group":"Not in guild context, use -c to specify target channel."}},F={internal:{"error-encountered":"不明なエラーが発生しました：{0}"},admin:{"user-option":"特定のユーザーを指定する","user-not-found":"指定されたユーザーが見つかりません。","user-unchanged":"ユーザーデータは変更されていません。","user-updated":"ユーザーデータが変更されました。","channel-option":"特定のチャンネルを指定する","channel-not-found":"指定されたチャンネルが見つかりません。","channel-unchanged":"チャンネルデータは変更されていません。","channel-updated":"チャンネルデータが変更されました。","not-in-group":"ギルドコンテキストではありません。-c を使用して特定のチャンネルを指定します。"}},O={internal:{"error-encountered":"Une erreur inconnue s'est produite : {0}"},admin:{"user-not-found":"Utilisateur introuvable.","user-unchanged":"Les données utilisateur n'ont pas été modifiées.","user-updated":"Les données utilisateur ont été changées.","channel-not-found":"Canel introuvable.","channel-unchanged":"Les données du canel n'ont pas été modifiées.","channel-updated":"Les données du canel ont été changées.","not-in-group":"Vous n'êtes pas dans le contexte du groupe, tapez -c pour spécifier le canel cible."}},T={internal:{"error-encountered":"出現未知錯誤：{0}"},admin:{"user-not-found":"找不到指定的用戶。","user-unchanged":"用戶資料未更新。","user-updated":"用戶資料已更新。","channel-option":"指定目標頻道","channel-not-found":"找不到指定的頻道。","channel-unchanged":"頻道資料未更新。","channel-updated":"頻道資料已更新。","not-in-group":"當前不在群組上下文中，請使用 -c 參數指定目標頻道。"}};function g(n){let t=n.indexOf(":"),s=n.slice(0,t),r=n.slice(t+1);return[s,r]}h(g,"parsePlatform");var w=new WeakSet;function m(n){w.has(n)||(w.add(n),n.i18n.define("zh",P),n.i18n.define("en",k),n.i18n.define("ja",F),n.i18n.define("fr",O),n.i18n.define("zh-TW",T))}h(m,"loadI18n");function v(n,t){return m(n.ctx.root),n.action(async(s,...r)=>{try{return await s.next()}catch(a){return t?t(a,s):s.session.text("internal.error-encountered",a.message)}},!0)}h(v,"handleError");function z(n){let t=!1;m(n.ctx.root);async function s(r){let{options:a,session:e}=r,{user:c,app:u}=e;if(!a.user)return;let[o,i]=g(a.user);if(e.user[o]===i)return;let f=e.collect("user",r),p=await u.database.getUser(o,i,[...f]);if(p){if(c.authority<=p.authority)return e.text("internal.low-authority");e.user=(0,d.observe)(p,async l=>{await u.database.setUser(o,i,l)},`user ${a.user}`)}else{t=!0;let l=u.model.tables.user.create();l[o]=i,e.user=(0,d.observe)(l,async y=>{await u.database.createUser(o,i,y)},`user ${a.user}`)}}return h(s,"setTarget"),n.option("user","-u [user:user]",{authority:3,descPath:"admin.user-option"}).userFields(["authority"]).userFields(({session:r,options:a},e)=>{let c=a.user?a.user.split(":")[0]:r.platform;e.add(c)}).action(async(r,...a)=>{let{session:e,next:c}=r,u=e.user,o=await s(r);if(o)return o;try{let i=Object.keys(e.user.$diff),f=await c();if(t&&!e.user.authority)return e.text("admin.user-not-found");if(typeof f=="string")return f;if((0,d.difference)(Object.keys(e.user.$diff),i).length){if(e.user!==u&&e.user.authority>=u.authority)return e.text("internal.low-authority")}else return e.text("admin.user-unchanged");return await e.user.$update(),e.text("admin.user-updated")}finally{e.user=u}},!0)}h(z,"adminUser");function I(n){let t=!1;m(n.ctx.root);async function s(r){let{options:a,session:e}=r,{app:c}=e;if(e.subtype==="private"&&!a.channel)return e.text("admin.not-in-group");let{channel:u=e.cid}=a;if(u===e.cid&&!e.channel.$detached)return;let[o,i]=g(u),f=r.session.collect("channel",r),p=await c.database.getChannel(o,i,[...f]);if(p)e.channel=(0,d.observe)(p,async l=>{await c.database.setChannel(o,i,l)},`channel ${u}`);else{t=!0;let l=c.model.tables.channel.create();l.platform=o,l.id=i,e.channel=(0,d.observe)(l,async y=>{await c.database.createChannel(o,i,y)},`channel ${u}`)}}return h(s,"setTarget"),n.channelFields(["assignee"]).option("channel","-c [channel:channel]",{authority:3,descPath:"admin.channel-option"}).action(async(r,...a)=>{let{session:e,next:c}=r,u=e.channel,o=await s(r);if(o)return o;try{let i=Object.keys(e.channel.$diff),f=await c();return t&&!e.channel.assignee?e.text("admin.channel-not-found"):typeof f=="string"?f:(0,d.difference)(Object.keys(e.channel.$diff),i).length?(await e.channel.$update(),e.text("admin.channel-updated")):e.text("admin.channel-unchanged")}finally{e.channel=u}},!0)}h(I,"adminChannel");export{I as adminChannel,z as adminUser,v as handleError,g as parsePlatform};
